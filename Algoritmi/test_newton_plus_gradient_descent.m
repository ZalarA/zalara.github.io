fprintf(['Z Newtonovo metodo rešujemo sistem\n\n'...
    '   3*x(1) - cos(x(1)*x(2)) - 3*0.6=0,\n'...
    '   x(1)^2 - 81*(x(2)+0.1)^2 + sin(x(3)) + 1.1=0,\n'...
    '   exp(-x(1)*x(2)) + 20*x(3) + 9.1=0.\n\n'])

%sistem

F=inline(strcat(...
   '[ 3*x(1) - cos(x(1)*x(2)) - 3*0.6;',...
   '  x(1)^2 - 81*(x(2)+0.1)^2 + sin(x(3)) + 1.1;',...
   '  exp(-x(1)*x(2)) + 20*x(3) + 9.1]'));

pause

fprintf(['Dober zaèetni približek bomo poiskali z\n'...
    ' gradientnim spustom:\n\n'])

pause

fprintf(['Potrebujemo funkcijo G=F_1^2+F_2^2+F_3^2 in njen gradient.\n\n'])

pause

G=inline(strcat(...
    '[(3*x(1) - cos(x(1)*x(2)) - 3*0.6)^2+',...
    '  (x(1)^2 - 81*(x(2)+0.1)^2 + sin(x(3)) + 1.1)^2+',...
    '   exp(-x(1)*x(2)) + 20*x(3) + 9.1]'))

gradG=inline(strcat(...
    '[2*(3*x(1) - cos(x(1)*x(2)) - 3*0.6)*(3+x(2)*sin(x(1)*x(2)))+',...
    '   2*(x(1)^2 - 81*(x(2)+0.1)^2 + sin(x(3)) + 1.1)*2*x(1)+',...
    '   2*(exp(-x(1)*x(2)) + 20*x(3) + 9.1)*exp(-x(1)*x(2))*(-x(2));',...
    '  2*(3*x(1) - cos(x(1)*x(2)) - 3*0.6)*(x(1)*sin(x(1)*x(2)))+',...
    '   2*(x(1)^2 - 81*(x(2)+0.1)^2 + sin(x(3)) + 1.1)*(-81*2*(x(2)+0.1))+',...
    '   2*(exp(-x(1)*x(2)) + 20*x(3) + 9.1)*exp(-x(1)*x(2))*(-x(2));',...
    '  2*(x(1)^2 - 81*(x(2)+0.1)^2 + sin(x(3)) + 1.1)*cos(x(3))+',...
    '   2*(exp(-x(1)*x(2)) + 20*x(3) + 9.1)*20]'))

fprintf(['Izraèunati moramo Jacobijevo matriko:\n'...
        '[ 3 + x(2)*sin(x(1)*x(2)), x(1)*sin(x(1)*x(2)),   0;\n',...    
        '  2*x(1),                  -162*(x(2)+0.1),       cos(x(3));\n',... 
        '  -x(2)*exp(-x(1)*x(2)),   -x(1)*exp(-x(1)*x(2)), 20]\n\n']);

x=gradient_descent(G,gradG,[6;2;3])    
    

pause

fprintf(['Jacobijeva matrika F:\n\n'])

pause

JF=inline(strcat(...
   '[ 3 + x(2)*sin(x(1)*x(2)), x(1)*sin(x(1)*x(2)),   0;',...    
   '  2*x(1),                  -162*(x(2)+0.1),       cos(x(3));',... 
   '  -x(2)*exp(-x(1)*x(2)),   -x(1)*exp(-x(1)*x(2)), 20]'))    
    
pause
fprintf('Rešujemo sistem Newtonovo metodo z zaèetnim približkom x:\n\n')

pause
y=newtonsis(F,JF,x);

pause
fprintf('rešitev je:\n\n')
y
